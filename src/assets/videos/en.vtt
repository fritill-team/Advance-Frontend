WEBVTT

1
00:00:02.250 --> 00:00:07.170
So far in this course, then, we've been creating visa applications with something called the Options

2
00:00:07.410 --> 00:00:08.080
API.

3
00:00:08.100 --> 00:00:13.560
Now, I've not explicitly said this any point, but that's the way we've been building applications.

4
00:00:13.800 --> 00:00:20.160
The option API is just a way that we use for you to create components using it looks something like

5
00:00:20.160 --> 00:00:26.700
this where we have a data function and methods, property, computed property and any lifecycle hooks

6
00:00:26.700 --> 00:00:27.390
as well.

7
00:00:27.900 --> 00:00:33.300
All of these are just added directly to the component object itself, which we export.

8
00:00:33.660 --> 00:00:39.000
So by making a few applications this way, we are just using what's known as the Options API.

9
00:00:39.000 --> 00:00:42.690
And this has been the way that we make a few applications for the past few years.

10
00:00:42.930 --> 00:00:46.320
And we still do make the applications this way today as well.

11
00:00:47.130 --> 00:00:54.210
But with the release of U3, view now allows us another way to create a few apps using what's known

12
00:00:54.210 --> 00:00:55.770
as the composition API.

13
00:00:56.100 --> 00:01:02.820
Now, when we use the composition API, we basically get access to a set up or set up function inside

14
00:01:02.820 --> 00:01:04.190
our component object.

15
00:01:04.530 --> 00:01:10.770
Now, inside the setup is where we will put all of our component data methods, compute properties and

16
00:01:10.770 --> 00:01:11.820
lifecycle hooks.

17
00:01:12.210 --> 00:01:19.080
Now the reason that the composition API was introduced in Q3 is because it addresses some of the limitations

18
00:01:19.320 --> 00:01:22.390
and drawbacks of the options API.

19
00:01:22.710 --> 00:01:29.070
Now, one of the main drawbacks of the options API is that it's much harder to group feature logic together.

20
00:01:29.370 --> 00:01:35.670
For example, for a component getting data and then formatting the data, we would have three moving

21
00:01:35.670 --> 00:01:41.370
parts, we'd have the data itself, we'd have a computer, property and a lifecycle.

22
00:01:41.910 --> 00:01:47.760
Now, all of these pieces of logic are spread out in the component away from one another, even though

23
00:01:47.760 --> 00:01:49.730
they all work together on the same feature.

24
00:01:49.980 --> 00:01:54.990
And you might also have logic for another feature in the same component around this, which is all spread

25
00:01:54.990 --> 00:01:57.630
out into different separate pieces as well.

26
00:01:57.930 --> 00:02:03.720
Now, as your projects get more complex, this can become harder to read and therefore also hard to

27
00:02:03.720 --> 00:02:04.480
update as well.

28
00:02:04.830 --> 00:02:10.080
Now, with the composition API, you can organize your code in such a way that groups feature logic

29
00:02:10.080 --> 00:02:12.890
together inside one set up function.

30
00:02:13.410 --> 00:02:21.270
Now, another benefit of using the composition API is that we can easily create reusable logic and code

31
00:02:21.270 --> 00:02:24.780
with what we call composition functions or compose marbles.

32
00:02:25.080 --> 00:02:29.490
For example, imagine you had a couple of components which listed blog posts in your website.

33
00:02:30.060 --> 00:02:35.460
In both components, you might use the same logic with a combination of computed properties, data and

34
00:02:35.460 --> 00:02:39.100
methods in order to retrieve the data and filter those lists.

35
00:02:39.150 --> 00:02:44.400
Now, you don't want to repeat all of that logic in each component because it's exactly the same, and

36
00:02:44.400 --> 00:02:45.740
that's just repeating your code.

37
00:02:46.020 --> 00:02:51.720
So using the composition API, you can extract all of that feature logic into what we currently call

38
00:02:51.960 --> 00:02:54.700
composition functions are composable.

39
00:02:55.020 --> 00:03:01.810
Then we just inject those reuseable functions into the set up function so we don't have any code duplication.

40
00:03:02.100 --> 00:03:06.690
Now, if you've ever used react hooks, this is a very similar concept.

41
00:03:07.320 --> 00:03:12.480
So they are the main two benefits of using the composition API instead of the options API.

42
00:03:12.600 --> 00:03:15.390
But remember, this is completely optional.

43
00:03:15.390 --> 00:03:16.610
You don't have to use it.

44
00:03:16.800 --> 00:03:23.280
You can still make a few apps using just the options API, as we have been doing so far and for small,

45
00:03:23.280 --> 00:03:24.330
simple projects.

46
00:03:24.330 --> 00:03:31.080
I still do that, however, for larger projects which require a bit more organization, more code reuse

47
00:03:31.080 --> 00:03:32.640
and more complex logic.

48
00:03:32.880 --> 00:03:38.940
I think using the composition API is better suited not all of the time, but a lot of the time.

49
00:03:39.240 --> 00:03:45.270
And definitely as we start to work with authentication and databases in future projects, the composition

50
00:03:45.270 --> 00:03:47.370
API will help us out a lot.

51
00:03:47.550 --> 00:03:52.860
And by the way, you can actually use a combination of both if you want to, so you can use the composition

52
00:03:52.860 --> 00:03:58.000
API for some logic and still use the options API for the simple logic as well.

53
00:03:58.230 --> 00:04:04.140
Now going forward, we'll be using the composition API about 80 percent of the time, but we might still

54
00:04:04.140 --> 00:04:09.140
dip into the options API to set up certain things in our components as well.

55
00:04:10.120 --> 00:04:15.430
So in this chapter, we'll be learning all about the composition API, and once we've learned the basics

56
00:04:15.430 --> 00:04:21.850
over the next few chapters, we'll be building a mini blog style application like this so we can list

57
00:04:21.850 --> 00:04:22.780
all of our blogs.

58
00:04:22.780 --> 00:04:27.580
We can see the details of the blog, and we can see we've got different tags here as well, which we

59
00:04:27.580 --> 00:04:30.250
can click on on the right to filter the blogs.

60
00:04:30.430 --> 00:04:32.950
So we only show blogs with those tags.

61
00:04:33.100 --> 00:04:35.990
We can also create new posts as well using this form.

62
00:04:36.250 --> 00:04:39.250
So this is what we're going to be building over the next two or three chapters.

63
00:04:39.430 --> 00:04:43.540
But first of all, I just want to talk about the basics of the composition API.

